<style lang="less">
@import "./style/common.less";
</style>
<script>
import wepy from 'wepy'
import moment from 'moment'
import '@/tool/utils.js'
import 'lodash'
import { $http } from '@/tool/http.js'
wepy.$moment = moment
export default class extends wepy.app {
  config = {
    pages: [
      'pages/home/index',  // 首页
      // 'pages/sample/send',  // 样本回寄
      // 'pages/webView/index',
      // 'pages/webView/sampleDetail',
      'pages/home/usageProcess', // 样本绑定
      'pages/home/intendedFor', // 适用人群
      'pages/home/bindSample' // 绑定样本提交页面
      // 'pages/ruleView/HPVRule', // HPV同意须知
      // 'pages/sample/gather',  // 样本视频
      // 'pages/sample/address', // 添加地址
      // 'pages/sample/detail', // 样本回寄详情
      // 'pages/sample/orderDetail', // 样本回寄下单
      // 'pages/ruleView/clauseView', // 快件运单契约条款
      // 'pages/sample/cancelOrder',  // 取消订单成功页面
      // 'pages/sample/logisticsDetail'// 物流详情
    ],
    // 分包加载
    subPackages: [
      {
        root: 'pages/sample',
        pages: ['send', 'gather', 'address', 'detail', 'orderDetail', 'cancelOrder', 'logisticsDetail']
      },
      {
        root: 'pages/webView',
        pages: ['index', 'sampleDetail']
      },
      {
        root: 'pages/ruleView',
        pages: ['HPVRule', 'clauseView']
      }
    ],
    window: {
      navigationBarTextStyle: 'black',
      navigationBarTitleText: '硕世健康',
      navigationBarBackgroundColor: '#ffffff',
      backgroundColor: '#fff'
    },
    networkTimeout: {
      request: 10000,
      connectSocket: 10000,
      uploadFile: 10000,
      downloadFile: 10000
    }
  };
  onLaunch(options) {
    this.removeData()
    this.autoUpdate()
  }
  removeData() {
    wx.removeStorageSync('sessionId')
    wx.removeStorageSync('shuoshibarCode')
    wx.removeStorageSync('addressInfo')
    wx.removeStorageSync('authFlag')
    wx.removeStorageSync('changeTime')
  }
  getSession() {
    var that = this
    return new Promise(function (resolve, reject) {
      wx.login({
        success: res => {
          //code 获取用户信息的凭证
          if (res.code) {
            //请求获取用户sessionId
            $http('user/api/wechat/getSession', { code: res.code, type: 0 }, 'Get').then(res => {
              that.globalData.sessionId = res.data.sessionId
              that.globalData.authFlag = res.data.authFlag
              if (!res.data.authFlag) {
                that.getAddress(res.data.sessionId)
              }
              wx.setStorageSync('sessionId', res.data.sessionId)
              wx.setStorageSync('authFlag', !res.data.authFlag ? true : false)
              resolve(res.data);
            })
          } else {
            console.log('获取用户登录态失败！')
            reject(res)  
          }
        }
      })
    })
  }
  getAddress(sessionId) {
    $http('sample/api/logistics/getReceiptInfo', {}, 'Get', sessionId).then(res => {
      console.log(res)
      this.globalData.addressData = res.data
    }).catch(error => {
      console.log(error)
    })
  }
  autoUpdate() {
    var self = this
    // 获取小程序更新机制兼容
    if (wx.canIUse('getUpdateManager')) {
      const updateManager = wx.getUpdateManager()
      // 1. 检查小程序是否有新版本发布
      updateManager.onCheckForUpdate(function (res) {
        // 请求完新版本信息的回调
        if (res.hasUpdate) {
          // 检测到新版本，需要更新，给出提示
          wx.showModal({
            title: '更新提示',
            content: '检测到新版本，是否下载新版本并重启小程序？',
            success: function (res) {
              if (res.confirm) {
                // 2. 用户确定下载更新小程序，小程序下载及更新静默进行
                self.downLoadAndUpdate(updateManager)
              } else if (res.cancel) {
                // 用户点击取消按钮的处理，如果需要强制更新，则给出二次弹窗，如果不需要，则这里的代码都可以删掉了
                wx.showModal({
                  title: '温馨提示~',
                  content: '本次版本更新涉及到新的功能添加，旧版本无法正常访问的哦~',
                  showCancel: false, // 隐藏取消按钮
                  confirmText: '确定更新', // 只保留确定更新按钮
                  success: function (res) {
                    if (res.confirm) {
                      // 下载新版本，并重新应用
                      self.downLoadAndUpdate(updateManager)
                    }
                  }
                })
              }
            }
          })
        }
      })
    } else {
      // 如果希望用户在最新版本的客户端上体验您的小程序，可以这样子提示
      wx.showModal({
        title: '提示',
        content: '当前微信版本过低，无法使用该功能，请升级到最新微信版本后重试。'
      })
    }
  }
  downLoadAndUpdate(updateManager) {
    wx.showLoading();
    // 静默下载更新小程序新版本
    updateManager.onUpdateReady(function () {
      wx.hideLoading()
      // 新的版本已经下载好，调用 applyUpdate 应用新版本并重启
      updateManager.applyUpdate()
    })
    updateManager.onUpdateFailed(function () {
      // 新的版本下载失败
      wx.showModal({
        title: '已经有新版本了哟~',
        content: '新版本已经上线啦~，请您删除当前小程序，重新搜索打开哟~'
      })
    })
  }
  constructor() {
    super();
    this.use('promisify');
    this.use('requestfix');
  }
  globalData = {
    userInfo: null,
    sessionId: '',
    authFlag: 0, // 是否绑定
    addressData: {}  // 收件地址
  }
}
</script>