<template>
  <scroll-view class="report-container">
    <view class="report-list" wx:if="{{!hasData&&list.length}}">
      <repeat for="{{list}}" wx:key="index">
        <view class="report-item">
          <view>样本编号: {{item.sampleNo}}</view>
          <view class="weui-flex between">
            <view>产品: {{item.productName}}</view>
            <button class="link" @tap="download({{item}})" wx:if="item.status==3">点击下载PDF报告</button>
          </view>
          <view>姓名: {{item.name}}</view>
          <view>状态: {{wxs.statusText(item.status)}}</view>
          <button class="btn weui-flex center" @tap="viewDetail({{item}})">{{wxs.btnText(item.status)}}</button>
        </view>
      </repeat>
    </view>
    <view wx:if="{{hasData&&!list.length}}" class="noData-box">
			<view class="noData-text">完成样本绑定及采集后，才能预约快递哦！</view>
		  <image src="https://api.s-sbio.com/images/noData.png" mode="widthFix" class="noData-icon">
      <view class="footer-btn"  @tap="bindSample">
        <button class="weui-flex center">去绑定</button>
      </view>
		</view>
  </scroll-view>
</template>
<script>
import wepy from 'wepy'
import { wxNavigateTo } from '@/tool/util'
import { $http } from '@/tool/http.js'
import { debounce } from "@/tool/debounce.js"
import wxs from '../../filterWxs/sample.wxs'
export default class list extends wepy.page {
  wxs = { wxs }
  data = {
    list: [],
    params: {
      current: 1,
      size: 10
    },
    total: 0,
    hasData: true
  }
  onShow() {
    this.getList()
  }
  getList() {
    $http('sample/api/list', this.params, 'Get').then(res => {
      console.log(res)
      if (res.data) {
        this.list = res.data.sampleList
        this.hasData = false
      } else {
         this.list = []
         this.hasData = true
      }
      this.$apply()
    }).catch(err => {
      console.log(err)
    })
  }
  downLoadPdf(sampleId) {
    wx.downloadFile({
      url: `https://testapi.s-sbio.com/sample/api/selectReport?sampleId=${sampleId}`, //仅为示例，并非真实的资源
      header: {
        'content-type': 'application/pdf'
      },
      success (res) {
        if (res.statusCode === 200) {    
          wx.openDocument({
            filePath: res.tempFilePath,
            fileType: 'pdf',
            success: function (res) {
              console.log('打开文档成功')
            },
            fail: function (res) {
              console.log(res)
            }
          })
        }
      }
    })
  }
  methods = {
    download(item) {
      this.downLoadPdf(item.sampleId)
    }
  }
}
</script>
<style lang="less">
 .report-container {
   background: #F8F8F8;
   width: 100%;
   height: 100%;
   .report-list {
     margin-bottom: 60rpx;
     padding-bottom: 40rpx;
    .report-item {
      margin: 40rpx;
      background:#fff;
      font-size: 32rpx;
      border-radius: 20rpx;
      padding: 12rpx 32rpx;
      line-height: 58rpx;
      color: #000000;
      position: relative;
      .btn {
        width: 174rpx;
        height: 58rpx;
        background:#F36681;
        border-radius: 30rpx;
        color: #fff;
        font-size: 26rpx;
        position: absolute;
        right: 28rpx;
        bottom: 28rpx;
        border: none;
      }
      .link {
        color: #E94B70;
        font-size: 26rpx;
        line-height: 44rpx;
        border: none;
        background: none;
        display: inline;
        text-align: right;
        padding: 0;
        &:active {
          opacity: 0.5;
          height: auto;
          width: auto;
        }
      }
    }
   }
   .noData-box {
      text-align: center;
      height: 100%;
      background: #ffffff;
      .noData-text {
        color: #000000;
        font-weight: 300;
        font-size: 32rpx;
        padding: 122rpx 0;
      }
      .noData-icon {
        width: 100%;
        height: 59%;
      }
    }
    .footer-btn {
      width: 70%;
      margin: 0 auto;
      button {
        height: 80rpx;
        width: 100%;
        background: #F36681;
        border-radius: 40rpx;
        color: #ffffff;
        font-size: 30rpx;
      }
		}
 }
</style>