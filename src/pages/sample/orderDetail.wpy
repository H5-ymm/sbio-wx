<style lang="less">
 @import "../../style/order.less";
  .send_view {
		height: 100%;
		overflow: auto;
		&.send_view1 {
			overflow: hidden;
		}
		.right-icon {
			width: 30rpx;
			height: 30rpx;
			margin-left: 10rpx;
		}
		.bold-text {
			font-weight: bold;
		}
		.order-text {
			color: #333333;
		}
		.tip-content {
			margin-top: 20rpx;
			line-height: 50rpx;
			font-size: 30rpx;
			.text {
				color: #666666;
				font-size: 28rpx;
			}
		}
		.bind-info {
			padding: 25rpx 36rpx;
			.tip-icon {
				width: 30rpx;
				height: 30rpx;
			}
			.sample-text {
				font-size: 28rpx;
				color: #999999;
				margin-left: 10rpx;
				text {
					color: #666666;
				}
			}
		}
  }
</style>
<template>
  <view class="send_view {{!isShow?'send_view1':''}}">
		<view class="page_content">
			<view class="order_content">
				<view class="order-header weui-flex between order-row" @tap="setAddress">
					<view class="order-col1 weui-flex between">
						<view class="order-left weui-flex center">寄</view>
						<view class="order-right order-right-default" wx:if="{{!hasAddress}}">请填写寄件人信息</view>
						<view wx:else class="order-right weui-flex__item">
							<view class="order-contactName"><text>{{addressInfo.startContactName}}</text><text>{{addressInfo.startContactPhone}}</text></view>
							<view class="order-address">{{addressText}}</view>
						</view>
					</view>
					<view class="order-col2 weui-flex end weui-flex__auto">
						<image src="https://api.s-sbio.com/images/wxImg/icon/right.png" mode="aspectFit" class="right-icon"></image>
					</view>
				</view>
				<!-- 收件地址 -->
				<recipients></recipients>
			</view>
			<view class="order_content">
				<view class="order-row" wx:if="{{sampleList.length>1}}">
					<view class="weui-flex between">
						<view>你有{{sampleList.length}}份待回寄样本，是否一起回寄 ?</view>
						<view class="order-time weui-flex between" @tap="selectAll">
							<view class="order-text bold-text">{{isSingleMailing?'否':'是'}}</view>
							<image src="https://api.s-sbio.com/images/wxImg/icon/right.png" mode="aspectFit" class="right-icon"></image>
						</view>
					</view>
					<view class="tip-content" wx:if="{{!isSingleMailing&&sampleList.length>1}}">
						<repeat for="{{sampleList}}" key="index">
							<view class="text">{{item.productName}} - {{item.name}}</view>
						</repeat>
					</view>
				</view>
				<view class="order-row weui-flex between" @tap="selectOrderTime">
					<view class="label-left">上门取件时间</view>
					<view class="order-time weui-flex between">
						<view class="order-text bold-text">{{orderEtd?timeText+orderEtd:'请选择'}}</view>
						<image src="https://api.s-sbio.com/images/wxImg/icon/right.png" mode="aspectFit" class="right-icon"></image>
					</view>
				</view>
				<orderInfo></orderInfo>
			</view>
			<view class="weui-flex start bind-info" @tap="checkRead({{isRead}})">
				<image src="https://api.s-sbio.com/images/wxImg/icon/selected.png" class="tip-icon" wx:if="{{isRead}}"/>
				<image src="https://api.s-sbio.com/images/wxImg/icon/no-select.png" class="tip-icon" wx:else/>
				<view class="sample-text" @tap.stop="agreeRule">我同意<text> 《快件运单契约条款》</text></view>
			</view>	
		</view>
  	<view class="footer-btn" @tap="overbooking">
			<button class="weui-flex center {{isCheck?'btn':''}}">下单</button>
		</view>
	  <selectTime :isShow.sync="isShow" :timeList.sync="timeList" @cancel="cancel" @seletOrderTime="seletOrderTime"></selectTime>
  </view>
</template>
<script>
import wepy from 'wepy'
import selectTime from '@/components/selectTime'
import recipients from '@/components/recipients'
import orderInfo from '@/components/orderInfo'
import { $http } from '@/tool/http.js'
import { wxNavigateTo, wxToast, wxReLaunch } from '@/tool/util'
import { debounce } from "@/tool/debounce.js"
let lock = false
export default class orderDetail extends wepy.page {
	components = {
		selectTime: selectTime,
		recipients: recipients,
		orderInfo: orderInfo
  }
  data = {
		form: {
			orderEtd: '',
			startContactName: '',
      startContactPhone: '',
      startStationAddress: '',
      startProvinceText: '',
      startCityText: '',
      startAreaText: '',
      startProvinceId: '',
      startCityId: '',
      startAreaId: ''
		},
		isShow: true,
		addressInfo: null,
		sampleList: [],
		isSingleMailing: false,
		orderEtd: '',
		activeIndex: 0,
		timeText: '',
		isRead: true,
		array: [],
		isClick: false,
		hasAddress: true,
		timeList: []
  }
  config = {
    navigationBarTitleText: '样本回寄'
	}
  onLoad(options) {
		if (options.query) {
			this.addressInfo = JSON.parse(options.query)
			this.form = this.changeNewObj(this.addressInfo, this.form)
			this.getTimeList(this.addressInfo)
		} else {
			this.getLatelyLogistics()
		}
		this.getSubmitFlag()
	}
	onShow() {
		lock = false
		if (wx.getStorageSync('isSingleMailing')) {
			this.isSingleMailing = wx.getStorageSync('isSingleMailing')
			this.$apply()
		}
	}
	onHide() {
		lock = false
	}
	onUnload() {
		lock = false
		if (!this.isClick) {
			wx.removeStorageSync('isSingleMailing')
		}
	}
	showTime(data) {
  	this.form.orderEtd = data.date
		this.orderEtd = data.time
		this.timeText = data.timeText
		this.activeIndex = data.activeIndex
		this.$apply()
	}
	getTimeList(addressInfo) {
		this.timeList = []
		let params = {
			areaId: addressInfo.startAreaId,
			address: addressInfo.startStationAddress
		}
		$http('logistics/api/getBookingTime', params, 'get').then(res => {
			this.timeList = res.data
			this.$apply()
		})
	}
	computed = {
    // 判断表单按钮是否置灰
    isCheck() {
			let flag = true
      for (let key in this.form) {
        if (!this.form[key]) {
          flag = false
        }
			}
      return flag
		},
		addressText() {
      return `${this.form.startProvinceText}${this.form.startCityText}${this.form.startAreaText}${this.form.startStationAddress}`
    }
  }
	events = {
		seletOrderTime: data => {
			this.isShow = !this.isShow
			this.$apply()
	  	this.showTime(data)
		},
		cancel: () => {
			this.isShow = !this.isShow
			this.$apply()
		}
	}
	getAddressText(form) {
		this.getCity(0, 'startProvinceText', form.startProvinceId)
		this.getCity(form.startProvinceId, 'startCityText', form.startCityId)
	  this.getCity(form.startCityId, 'startAreaText', form.startAreaId)
	}
	getAddress(id, arr) {
		let text
		arr.forEach(item => {
			if (id == item.id) {
				text = item.cityNameZh
			}
		})
		return text
	}
	// 获取省市区名称
	getCity(cityParentId, key, id) {
    $http('admin/api/getCity', { cityParentId }, 'Get').then(res => {
			this.form[key] = this.getAddress(id, res.data)
			this.addressInfo[key] = this.form[key]
      this.$apply()
    })
	}
	// 获取最新的地址
	getLatelyLogistics() {
    $http('sample/api/logistics/getLatelyLogistics', {}, 'Get').then(res => {
			if (res.data) {
				this.hasAddress = true
				this.addressInfo = {
					startProvinceId: res.data.startProvinceId,
					startAreaId: res.data.startAreaId,
					startCityId: res.data.startCityId,
					startContactName: res.data.startContactName,
					startContactPhone:  res.data.startContactPhone,
					startStationAddress: res.data.startStreetAddress,
				}
				this.getAddressText(res.data)
				this.form = this.changeNewObj(this.addressInfo, this.form)
				this.getTimeList(this.addressInfo)
				this.$apply()
			} else {
				this.hasAddress = false
				this.getUserInfo()
			}
    })
	}
	// 获取最新的用户信息
  getUserInfo() {
    $http('sample/api/getLatelySample', {}, 'Get').then(res => {
      if (res.data) {
        this.form.startContactName = res.data.patientName
				this.form.startContactPhone = res.data.phone
				this.addressInfo = {
					startContactName: res.data.patientName,
					startContactPhone: res.data.phone,
					startStationAddress: '',
					startProvinceText: '',
					startCityText: '',
					startAreaText: '',
					startProvinceId: '',
					startCityId: '',
					startAreaId: ''
				}
        this.$apply()
      }
    })
	}
	// 获取新的对象
	changeNewObj(obj1, obj2) {
   	for(let key in obj1) {
			obj2[key] = obj1[key]
		}
		return obj2	
	}
	// 获取待回寄样本数据
	getSubmitFlag() {
    $http('sample/api/listSubmit', {}, 'Get').then(res => {
			wx.setStorageSync('sampleList', JSON.stringify(res.data))
			this.sampleList = res.data
			this.$apply()
    })
	}
	// 下单
  saveSample() {
		let arr = this.sampleList.map(item => { return item.sampleId })
		if (this.isSingleMailing && arr.length > 1) {
			this.form.sampleIds = arr[0]
		} else {
			this.form.sampleIds = arr.join(',')
		}
    $http('sample/api/logistics/createOrder', this.form).then(res => {
      if (res.code === 0) {
				wxToast('保存成功')
				wx.removeStorageSync('isSingleMailing')
				wx.setStorageSync('addressInfo', JSON.stringify(this.addressInfo))
				setTimeout(() => {
					let fun = () => {
						wxReLaunch('/pages/sample/detail?logisticsId=' + res.data.logisticsId)
						lock = false
					}
					debounce(fun(), 500, true)		
				}, 1200)
      } else {
			  lock = false
        wxToast('保存失败')
      }
    })
  }
  methods = {
		// 同意快递规则
		agreeRule() {
			let fun = () => {
				wxNavigateTo('/pages/ruleView/clauseView')
			}
			debounce(fun(), 500, true)	
		},
		// 是否寄回全部样本
		selectAll() {
			wx.showActionSheet({
		  	itemList: ['是', '否'],
				success: res => {
					if (res.tapIndex === 0) {
						this.isSingleMailing = false
					} else {
						this.isSingleMailing = true
					}
					wx.setStorageSync('isSingleMailing', this.isSingleMailing)
					this.$apply()
				},
				fail (res) {
					console.log(res.errMsg)
				}
			})
		},
		// 选择上门取件时间
		selectOrderTime() {
			if (!this.form.startProvinceId) {
				return wxToast('请先填写寄件人信息')
			}
			this.isShow = !this.isShow
			this.$apply()
		},
		// 选择地址
		setAddress() {
			if (!this.addressInfo) {
				let fun1 = () => {
          wxNavigateTo('/pages/sample/address')
				}
				debounce(fun1(), 500, true)		
			} else {
				if (!this.addressInfo.startAreaText) {
					this.getCity(this.form.startCityId, 'startAreaText', this.form.startAreaId)
				}
				let fun2 = () => {
          wxNavigateTo('/pages/sample/address?query=' + JSON.stringify(this.addressInfo))
				}
				debounce(fun2(), 500, true)		
			}
		},
		checkRead(flag) {
			this.isRead = !flag
			this.$apply()
		},
		overbooking() {
			this.isClick = true
			this.$apply()
			if (!this.isCheck) return
			if (!this.form.orderEtd) {
        wxToast('请选择预约时间')
			} else if (!this.isRead) {
        wxToast('请同意快件运单契约条款')
			} else {
				if (lock) return
		  	lock = true
				this.saveSample()
			}
		}
  }
}
</script>
