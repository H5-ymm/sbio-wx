<style lang="less">
 @import "../../style/order.less";
  .send_view {
		padding: 20rpx;
		background: #f6f6f6;
		&.page_auto {
			height: auto;
		}
		.section {
			background: #ffffff;
			border-radius: 20rpx;
			.tip-box {
				border-radius: 20rpx;
				margin: 20rpx 0 40rpx;
				border-top: 0;
				padding-top: 20rpx; 
				.bind-info {
				  margin: 0 36rpx 20rpx;
				}
			}
		}
  }
</style>
<template>
  <view class="send_view page_auto">
		<timeCard @cancalOrder="cancalOrder" :timeInfo.sync="timeInfo"></timeCard>
		<view class="section">
			<!-- 寄件地址 -->
			<sendAddress :addressInfo.sync="addressInfo"></sendAddress>
			<!-- 收件地址 -->
			<recipients></recipients>
			<!-- 订单样本信息 -->
			<orderInfo :addressInfo.sync="addressInfo"></orderInfo>
		</view>
		<view class="section">
			<tipTeamplte></tipTeamplte>
		</view>
  </view>
</template>
<script>
import wepy from 'wepy'
import tipTeamplte from '@/components/tipTeamplte'
import timeCard from '@/components/timeCard'
import sendAddress from '@/components/sendAddress'
import recipients from '@/components/recipients'
import orderInfo from '@/components/orderInfo'
import { $http } from '@/tool/http.js'
import { wxReLaunch, wxToast } from '@/tool/util'
import { debounce } from "@/tool/debounce.js"
import $moment from 'moment'
let lock = false
export default class detail extends wepy.page {
	components  = {
		tipTeamplte: tipTeamplte,
		timeCard: timeCard,
		sendAddress: sendAddress,
		recipients: recipients,
		orderInfo: orderInfo
  }
  data = {
		addressInfo: {},
		logisticsId: '',
		timeInfo: {},
		sessionId: '',
		recipientsInfo: {}
  }
  config = {
    navigationBarTitleText: '样本回寄'
  }
  onLoad(options) {
		this.logisticsId = options.logisticsId
		if (!this.$parent.globalData.sessionId) {
			this.$parent.getSession().then(res => {
				this.getLogistics(this.logisticsId , res.sessionId)
			})
		} else {
			this.getLogistics(this.logisticsId)
		}
	}
	onHide() {
		lock = false
	}
	onUnload() {
		lock = false
	}
	events = {
		// 取消订单
		cancalOrder: () => {
			if (lock) return
		  lock = true
      this.checkIsCancelOrder()
		}
	}
	// 获取物流信息
	getLogistics(logisticsId, sessionId) {
		$http('sample/api/logistics/getLogistics', { logisticsId }, 'Get', sessionId).then(res => {
			this.addressInfo = res.data
			this.recipientsInfo = this.$parent.globalData.addressData
			this.getSampleDate(res.data.orderEtd)
			this.$apply()
    }).catch(error => {
			console.log(errro)
		})
	}
  // 处理预约时间
	getSampleDate(orderEtd) {
		let date = $moment.unix(orderEtd).format('HH')
		let startTime = Number(date) + 1
		this.timeInfo = {
			startTime: date +':00',
			endTime: startTime < 10 ? '0' + startTime + ':00' : startTime + ':00',
			date: $moment.unix(orderEtd).format('YYYY/MM/DD')
		}
	}
	// 验证订单是否可以取消
	checkIsCancelOrder() {
		$http('sample/api/logistics/getCancelFlag', { logisticsId: this.logisticsId }, 'Get',  this.sessionId).then(res => {
			if (res.data.cancelFlag) {
				this.cancelSamplorder()
			} else {
				lock = false
				wxToast(res.data.msg || '该订单不能取消')
			}
    }).catch(error => {
      lock = false
    }) 
	}
	// 取消订单
  cancelSamplorder() {
    $http('sample/api/logistics/cancel?logisticsId=' + this.logisticsId, {}, 'Put',  this.sessionId).then(res => {
			if (res.code === 0) {	
				let fn = () => {		
					wxToast('取消成功')
					setTimeout(() =>{
						wxReLaunch('/pages/sample/cancelOrder?addressInfo=' + JSON.stringify(this.addressInfo))
						lock = false
					}, 1200)
        }
        debounce(fn(), 500, true) 
			}
    })
  }
}
</script>
